---

- name: make sure we have certs and https
  apt:
    update_cache: true
    cache_valid_time: 3600
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg2
      - software-properties-common

- name: add key
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88

- name: add repo to sources.list
  apt_repository:
    repo='deb [arch=amd64] https://download.docker.com/linux/debian jessie stable'


## we would have to delete old repos, but it's a fresh install, so never mind


- name: install docker
  apt:
    update_cache: true
    cache_valid_time: 3600
    name:
      - docker-ce
    state: latest

- name: start docker daemon
  service:
    name: docker
    state: started


- name: install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.13.0/docker-compose-{{ ansible_system }}-{{ ansible_machine }}
    dest: /usr/local/bin/docker-compose
    mode: 0755
    checksum: sha256:0d8af4d3336b0b41361c06ff213be5c42e2247beb746dbc597803e862af127e8
    backup: yes

- name: make sure docker-compose owner is root:root, 0755
  file: path=/usr/local/bin/docker-compose owner=root group=root mode=0755

  
- name: add the docker group
  group: name=docker state=present

- name: add a user, which can run docker containers
  user:
    name: '{{ ansible_user }}'
    groups: docker
    append: yes
    shell: /bin/bash
  notify:
    - restart docker daemon   # don't know why they have this step in docs, should probably work without it
    
# - name: add key of the user to authorized_keys
#   authorized_key:
#     user: '{{ username }}'
#     key: '{{ public_key_url }}'



# TODO: add to the end
# - name: for dnsdock 
#   lineinfile: dest="/lib/systemd/system/docker.service" regexp="^ExecStart=/usr/bin/dockerd -H fd://" line="ExecStart=/usr/bin/dockerd -H fd:// --bip=172.17.0.1/24 --dns=172.17.0.1"





